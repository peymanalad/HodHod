@using HodHod.Web.Areas.App.Models.EntityChanges
@using Abp.Events.Bus.Entities;

@model EntityChangeListViewModel

@section Styles
{
    <link rel="stylesheet" abp-href="/view-resources/Areas/App/Views/EntityChanges/index.css" asp-append-version="true"/>
}

<div class="@(await GetContainerClass())">
    <div class="row g-5 g-xl-8">
        <div class="col-xl-12">
            <div class="card card-xl-stretch mb-xl-8">
                <div class="card-header align-items-center border-0 mt-4">
                    <h3 class="card-title align-items-start flex-column">
                        @if (Model.EntityAndPropertyChanges != null && Model.EntityAndPropertyChanges.Count > 0)
                        {
                            <span class="fw-bold mb-2 text-gray-900">@L("ChangeLogs"): @ViewBag.EntityTypeShortName #@ViewBag.EntityId</span>
                            <span class="text-muted fw-semibold fs-7">@ViewBag.ChangesCount @L("Changes")</span>
                        }
                        else
                        {
                            <span class="fw-bold mb-2 text-gray-900">@L("ChangeLogs"): @ViewBag.EntityTypeShortName #@ViewBag.EntityId</span>
                            <span class="text-muted fw-semibold fs-7">@L("NoEntityChanges")</span>
                        }
                    </h3>
                </div>
                <div class="card-body pt-5">
                    <div class="timeline-label">
                        @foreach (var entityChange in Model.EntityAndPropertyChanges)
                        {
                            <div class="timeline-item">
                                <div class="timeline-label fw-bold text-gray-800 fs-6">
                                    @entityChange.EntityChange.ChangeTime.ToShortDateString()
                                    <br />
                                    @entityChange.EntityChange.ChangeTime.ToShortTimeString()
                                </div>

                                @if (entityChange.EntityChange.ChangeType == EntityChangeType.Created)
                                {
                                    <div class="timeline-badge">
                                        <i class="fa fa-genderless text-success fs-1"></i>
                                    </div>
                                }
                                else if (entityChange.EntityChange.ChangeType == EntityChangeType.Updated)
                                {
                                    <div class="timeline-badge">
                                        <i class="fa fa-genderless text-warning fs-1"></i>
                                    </div>
                                }
                                else
                                {
                                    <div class="timeline-badge">
                                        <i class="fa fa-genderless text-danger fs-1"></i>
                                    </div>
                                }

                                <div class="fw-normal timeline-content text-muted ps-3">
                                    <span class="fw-bold text-gray-900 ps-3">
                                        @entityChange.EntityChange.ChangeType by @entityChange.EntityChange.UserName
                                        @if (!string.IsNullOrWhiteSpace(entityChange.EntityChange.ImpersonatorUserName))
                                        {
                                            <span class="text-muted">(@L("ImpersonatedBy", entityChange.EntityChange.ImpersonatorUserName))</span>
                                        }
                                    </span>
                                    <div class="ps-3 mt-2">
                                        <ul class="list-unstyled">
                                            @foreach (var propertyChange in entityChange.EntityPropertyChanges)
                                            {
                                                <li class="mb-2">
                                                    <strong>@propertyChange.PropertyName</strong>:
                                                    <span class="original-value text-gray-900">@propertyChange.OriginalValue</span>
                                                    <span class="change-indicator">-></span>
                                                    <span class="new-value text-gray-900">@propertyChange.NewValue</span>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>